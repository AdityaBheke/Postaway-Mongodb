
{"level":"error","message":"URL: /api/user/signup, Error: {status: false, errorCode: 403, message: Name should not be empty}"}
{"level":"error","message":"URL: /api/user/signup, Error: {status: false, errorCode: 403, message: Name should not be empty}"}
{"level":"error","message":"URL: /api/user/signup, Error: {status: false, errorCode: 403, message: Name should not be empty, Password should not be empty}"}
{"level":"error","message":"URL: /api/user/signup, Error: {status: false, errorCode: 403, message: Name should not be empty, Enter valid email, Password should not be empty}"}
{"level":"error","message":"URL: /api/user/signup, Error: {status: false, errorCode: 403, message: Enter valid email, Password should not be empty}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 400, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 400, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 403, message: Enter valid email}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 403, message: Enter valid email}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 403, message: Password should not be empty}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 403, message: Password should not be empty}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 400, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/user/signup, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/user/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/all, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/ik, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/0, Error: {status: false, errorCode: 404, message: Post with id 0 not found}"}
{"level":"error","message":"URL: /api/post/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/9, Error: {status: false, errorCode: 404, message: Post with id 9 not found}"}
{"level":"error","message":"URL: /api/post/kl, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/0, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/9, Error: {status: false, errorCode: 404, message: Post with id 9 not found}"}
{"level":"error","message":"URL: /api/post/0, Error: {status: false, errorCode: 404, message: Unable to delete post with id 0}"}
{"level":"error","message":"URL: /api/post/9, Error: {status: false, errorCode: 404, message: Unable to delete post with id 9}"}
{"level":"error","message":"URL: /api/post/4, Error: {status: false, errorCode: 404, message: Unable to delete post with id 4}"}
{"level":"error","message":"URL: /api/post/3, Error: {status: false, errorCode: 404, message: Unable to delete post with id 3}"}
{"level":"error","message":"URL: /api/post/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/0, Error: {status: false, errorCode: 404, message: Unable to delete post with id 0}"}
{"level":"error","message":"URL: /api/post/%7Bid%7D, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/post/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id, File should not be empty}"}
{"level":"error","message":"URL: /api/post/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/post/4, Error: {status: false, errorCode: 404, message: Unable to update post with id 4}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/comment/0, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/comment/0, Error: {status: false, errorCode: 404, message: Post with id 0 not found}"}
{"level":"error","message":"URL: /api/comment/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/0, Error: {status: false, errorCode: 404, message: Post with id 0 not found}"}
{"level":"error","message":"URL: /api/comment/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/-1, Error: {status: false, errorCode: 400, message: Invalid post id, Comment cannot be empty}"}
{"level":"error","message":"URL: /api/comment/9, Error: {status: false, errorCode: 404, message: Post with id 9 not found}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/0, Error: {status: false, errorCode: 404, message: Post with id 0 not found}"}
{"level":"error","message":"URL: /api/comment/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/4, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/comment/4, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/comment/-2, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/99, Error: {status: false, errorCode: 404, message: Post with id 99 not found}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/1, Error: {status: false, errorCode: 400, message: Comment cannot be empty}"}
{"level":"error","message":"URL: /api/comment/6, Error: {status: false, errorCode: 403, message: You cannot update other user's comment}"}
{"level":"error","message":"URL: /api/comment/99, Error: {status: false, errorCode: 403, message: You cannot update other user's comment}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/comment/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/comment/9, Error: {status: false, errorCode: 403, message: You cannot delete other user's comment}"}
{"level":"error","message":"URL: /api/comment/5, Error: {status: false, errorCode: 403, message: You cannot delete other user's comment}"}
{"level":"error","message":"URL: /api/like/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/like/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/like/0, Error: {status: false, errorCode: 404, message: Post with id 0 not found}"}
{"level":"error","message":"URL: /api/like/1, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/like/toggle/1, Error: {name: TypeError, message: Cannot read properties of undefined (reading 'like')}"}
{"level":"error","message":"URL: /api/like/toggle/0, Error: {status: false, errorCode: 404, message: Post with id 0 not found}"}
{"level":"error","message":"URL: /api/like/toggle/-1, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/like/toggle/%7Bid%7D, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/like/toggle/%7Bid%7D, Error: {status: false, errorCode: 400, message: Invalid post id}"}
{"level":"error","message":"URL: /api/like/toggle/9, Error: {status: false, errorCode: 404, message: Post with id 9 not found}"}
{"level":"error","message":"URL: /api/like/toggle/7, Error: {status: false, errorCode: 404, message: Post with id 7 not found}"}
{"level":"error","message":"URL: /api/user/logout, Error: {status: false, errorCode: 400, message: Enter valid email, Password should not be empty}"}
{"level":"error","message":"URL: /api/posts/all, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/posts/all, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: E11000 duplicate key error collection: postaway.users index: email_1 dup key: { email: \"aditya@gmail.com\" }}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: User validation failed: name: Name should contain atleast 2 characters}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: User validation failed: age: Age must be between 0 to 100}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: User validation failed: name: Name should contain atleast 2 characters, age: Age must be between 0 to 100}"}
{"level":"error","message":"URL: /api/users/signin, Error: {name: TypeError, message: Cannot read properties of null (reading 'password')}"}
{"level":"error","message":"URL: /api/users/signin, Error: {name: Error, message: data and hash arguments required}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 400, message: User not found}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 400, message: User not found}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/users/signin, Error: {name: TypeError, message: Cannot read properties of undefined (reading 'id')}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 404, message: User not found}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: E11000 duplicate key error collection: postaway.users index: email_1 dup key: { email: \"aditya34@gmail.com\" }}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Name should not be empty}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: User validation failed: name: Name should contain atleast 2 characters}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: User validation failed: age: Age must be between 0 to 100}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Password should not be empty}"}
{"level":"error","message":"URL: /api/users/update-details, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/users/get-details/:userId, Error: {status: false, errorCode: 400, message: Cast to ObjectId failed for value \":userId\" (type string) at path \"_id\" for model \"User\"}"}
{"level":"error","message":"URL: /api/users/get-details/66ae447302b2139a83385d22, Error: {status: false, errorCode: 404, message: User not found}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 404, message: User not found}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 404, message: User not found}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: E11000 duplicate key error collection: postaway.users index: email_1 dup key: { email: \"aditya@gmail.com\" }}"}
{"level":"error","message":"URL: /api/users/update-details, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: E11000 duplicate key error collection: postaway.users index: email_1 dup key: { email: \"aditya@gmail.com\" }}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signin, Error: {status: false, errorCode: 401, message: Invalid credentials}"}
{"level":"error","message":"URL: /api/posts, Error: {name: TypeError, message: Cannot read properties of undefined (reading 'repository')}"}
{"level":"error","message":"URL: /api/posts, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/posts, Error: {status: false, errorCode: 400, message: File should not be empty}"}
{"level":"error","message":"URL: /api/posts, Error: {status: false, errorCode: 400, message: Post validation failed: caption: Caption cannot be empty}"}
{"level":"error","message":"URL: /api/posts/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 400, message: Invalid post id, File should not be empty}"}
{"level":"error","message":"URL: /api/posts/user/66ae69ba0158c02cf688989, Error: {status: false, errorCode: 400, message: Cast to ObjectId failed for value \"66ae69ba0158c02cf688989\" (type string) at path \"user\" for model \"Post\"}"}
{"level":"error","message":"URL: /api/posts/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae69ba0158c02cf688989, Error: {status: false, errorCode: 400, message: Cast to ObjectId failed for value \"66ae69ba0158c02cf688989\" (type string) at path \"_id\" for model \"Post\"}"}
{"level":"error","message":"URL: /api/posts/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 403, message: Only post owner can update post}"}
{"level":"error","message":"URL: /api/posts/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 403, message: Only post owner can update post}"}
{"level":"error","message":"URL: /api/posts/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae6cb5e96d534376984b65, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 403, message: Only post owner can update post}"}
{"level":"error","message":"URL: /api/posts/66ae6f940f3a087fe0b2ffe6, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae6f940f3a087fe0b2ffe6, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: E11000 duplicate key error collection: postaway.users index: email_1 dup key: { email: \"aditya34@gmail.com\" }}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: Enter valid email}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: User validation failed: name: Name should contain atleast 2 characters}"}
{"level":"error","message":"URL: /api/users/signup, Error: {status: false, errorCode: 400, message: E11000 duplicate key error collection: postaway.users index: email_1 dup key: { email: \"joy@gmail.com\" }}"}
{"level":"error","message":"URL: /api/posts/all, Error: {status: false, errorCode: 401, message: Bad request Token not available}"}
{"level":"error","message":"URL: /api/posts, Error: {status: false, errorCode: 400, message: Post validation failed: imageUrl: Image cannot be empty}"}
{"level":"error","message":"URL: /api/posts/66ae77f1684c6f64fc13802d, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/posts/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/comments/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 401, message: Token expired}"}
{"level":"error","message":"URL: /api/comments/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 400, message: deletedComment is not defined}"}
{"level":"error","message":"URL: /api/comments/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 404, message: Comment not found}"}
{"level":"error","message":"URL: /api/comments/66ae959a9680f7dce9dc67a0, Error: {status: false, errorCode: 403, message: Only comment owner can update comment}"}
{"level":"error","message":"URL: /api/comments/66ae95d19680f7dce9dc67a8, Error: {status: false, errorCode: 404, message: Comment not found}"}
{"level":"error","message":"URL: /api/comments/66ae959a9680f7dce9dc67a0, Error: {status: false, errorCode: 403, message: Only comment owner can update comment}"}
{"level":"error","message":"URL: /api/comments/66ae95d19680f7dce9dc67a8, Error: {status: false, errorCode: 404, message: Comment not found}"}
{"level":"error","message":"URL: /api/comments/66ae95d19680f7dce9dc67a8, Error: {status: false, errorCode: 404, message: Comment not found}"}
{"level":"error","message":"URL: /api/comments/66ae959a9680f7dce9dc67a0, Error: {status: false, errorCode: 403, message: Only comment owner can update comment}"}
{"level":"error","message":"URL: /api/comments/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 400, message: Comment validation failed: content: Comment cannot be empty}"}
{"level":"error","message":"URL: /api/comments/66ae97b4b7326cf1c369a45d, Error: {status: false, errorCode: 400, message: Comment validation failed: content: Comment cannot be empty}"}
{"level":"error","message":"URL: /api/comments/66ae6c9ce96d534376984b63, Error: {status: false, errorCode: 400, message: Cannot populate path `comment` because it is not in your schema. Set the `strictPopulate` option to false to override.}"}
{"level":"error","message":"URL: /api/comments/66ae959a9680f7dce9dc67a0, Error: {status: false, errorCode: 403, message: Only comment owner can update comment}"}
{"level":"error","message":"URL: /api/likes/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/likes/toggle/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 404, message: Post not found}"}
{"level":"error","message":"URL: /api/friends/get-friends/:userId, Error: {status: false, errorCode: 400, message: Cast to ObjectId failed for value \":userId\" (type string) at path \"_id\" for model \"User\"}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: Class constructor ObjectId cannot be invoked without 'new'}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: Class constructor ObjectId cannot be invoked without 'new'}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: Class constructor ObjectId cannot be invoked without 'new'}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: You cannot send request to yourself}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e%20, Error: {status: false, errorCode: 400, message: Cast to ObjectId failed for value \"66ae69ba0158c02cf688989e \" (type string) at path \"_id\" for model \"User\"}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: You cannot send request to yourself}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 400, message: Cannot read properties of null (reading 'status')}"}
{"level":"error","message":"URL: /api/friends/response-to-request/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 404, message: Friend request not found}"}
{"level":"error","message":"URL: /api/friends/get-pending-requests, Error: {status: false, errorCode: 400, message: Cannot populate path `sender,` because it is not in your schema. Set the `strictPopulate` option to false to override.}"}
{"level":"error","message":"URL: /api/friends/get-pending-requests, Error: {status: false, errorCode: 400, message: Cannot populate path `sender,` because it is not in your schema. Set the `strictPopulate` option to false to override.}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 400, message: You cannot send request to yourself}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: You already have a pending request from this user}"}
{"level":"error","message":"URL: /api/friends/response-to-request/66ae7138ef95b9df3d39dd41, Error: {status: false, errorCode: 404, message: Friend request not found}"}
{"level":"error","message":"URL: /api/friends/response-to-request/66ae7138ef95b9df3d39dd41, Error: {status: false, errorCode: 404, message: Friend request not found}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66afb82c15434341f9db730f, Error: {status: false, errorCode: 404, message: Receiver not found}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69f10158c02cf68898a2, Error: {status: false, errorCode: 400, message: You already have a pending request from this user}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: You already have a pending request from this user}"}
{"level":"error","message":"URL: /api/friends/response-to-request/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 404, message: Friend request not found}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae69ba0158c02cf688989e, Error: {status: false, errorCode: 400, message: You cannot send request to yourself}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66afb93215434341f9db7348, Error: {status: false, errorCode: 404, message: Receiver not found}"}
{"level":"error","message":"URL: /api/friends/toggle-friendship/66ae7138ef95b9df3d39dd41, Error: {status: false, errorCode: 400, message: You already have a pending request from this user}"}
{"level":"error","message":"URL: /api/friends/response-to-request/66ae7138ef95b9df3d39dd41, Error: {status: false, errorCode: 404, message: Friend request not found}"}
